dataset{
    obj_name = buddha
    data_dir = ../dataset/buddha
    # train_view = 15
    # train_light = 8
    # all_view = True
    inten_normalize = sdps
}
train{
    expname = test_1
    dataset_class = datasets.dataset.SceneDataset
    ###### light params
    light_train = True
    multi_light = True
    light_bs = 10
    light_init = pred      ### gt, pred 
    light_inten_train = True
    light_inten_init = same       ## same, gt, pred
    light_learning_rate = 5e-4
    light_inten_lr = 1e-3
    light_decay = True
    ###### brdf params
    render_model = sgbasis    ### sgbasis, microfacet
    nbasis = 9
    specular_rgb = True
    ######  visibility params 
    visibility = True
    vis_loss = True
    vis_plus = True    ### better visibility optimization if set True, requires `--vis_plus` when extracting shapes from stage I
    vis_train_num = 8
    light_vis_detach = True
    vis_rgb_detach = True    ### better performance if set True
    ###### normal params
    normal_mlp = True
    normal_joint = True
    shape_pregen = True
    stage1_shape_path = ../stage1/exps_shape/buddha/test_1_100000
    ###### training options
    train_order = True       ### normal/visibility pretrain for 5K iters
    # ana_fixlight = True
    sample_in_mask = True
    model_class = model.renderer.PSNetwork
    loss_class = model.loss.MainLoss
    plot_freq = 1000            # iterations
    ckpt_freq = 1000            # iterations
    num_pixels =  8192
    train_all_pixels = True
    sg_learning_rate = 5e-4
    sg_sched_milestones = [200,400,600,800,1000]  
    sg_sched_factor = 0.5
}
loss{
    sg_rgb_weight = 1.0
    loss_type = L1
    albedo_smooth_weight = 0.05
    rough_smooth_weight = 0.01
    vis_weight = 1
}
brdf{
    net{
        n_freqs_xyz = 10
        mlp_width = 128
        mlp_depth = 4
        mlp_skip_at = 2
        xyz_jitter_std = 0.01
    }
    sgnet{
        mlp_width = 64
        mlp_depth = 2
        mlp_skip_at = -1
    }
    # BRDF
    fresnel_f0 = 0.05
    # Lighting
    light_intensity = 2.0
}
normal{
    net{
        n_freqs_xyz = 10
        mlp_width = 128
        mlp_depth = 4
        mlp_skip_at = 2
        xyz_jitter_std = 0.0
    }
    loss{
        normal_weight = 1
        normal_smooth_weight = 0.05
    }
    learning_rate = 5e-4
}
visibility{
    net{
        n_freqs_xyz = 10
        mlp_width = 256
        mlp_depth = 8
        mlp_skip_at = 4
    }
}